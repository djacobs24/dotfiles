#!/bin/bash

# View the weather
function weather() {
  if [ "$1" != "" ] && [ "$2" != "" ]; then
    LOC=$1+$2
  elif [ "$1" != "" ]; then
    LOC=$1
  else
    # Default city
    LOC=beavercreek
  fi
  curl -s http://wttr.in/$LOC
}

# Kubectl port forwarding
function kfwd() {
  if [ "$1" = "mongo" ]; then
    kubectl -n platform port-forward svc/mongodb 27017
  elif [ "$1" = "rabbit" ]; then
    kubectl -n platform port-forward svc/rabbitmq 15672
  elif [ "$1" = "api" ]; then
    kubectl -n platform port-forward svc/service-api 8080
  elif [ "$1" = "hook" ]; then
    kubectl -n platform port-forward svc/service-hook 3002
  elif [ "$1" = "sql" ]; then
    kubectl -n platform port-forward svc/postgres-postgresql 5432
  fi
}

# Start Minikube and setup the platform namespace
function setupMinikube() {
  cddv && pwd && minikube start && eval $(minikube docker-env) && kubens && kubens platform && kubens && kubectl apply -f $REPOS/github.com/TangramFlex/devops/resources
}

# View my aliases
function aliases() {
  grep alias ~/dotfiles/.aliases
}

## Docker cleanup
function dockerClean() {
  # Remove exited containers
  docker rm $(docker ps -a -f status=exited -q)
  # Remove dangling images
  docker images -f dangling=true | grep 'none' | awk '{print $3}' | xargs docker rmi
  # Remove images that are super old, sometimes fails
  docker images | grep 'months' | awk '{print $3}' | xargs docker rmi
}

# Push new git branch
function pushNew() {
  git push -u origin $(parseGitBranch)
}

# Parses a git branch
function parseGitBranch() {
	git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parseGitDirty)/"
}

# Parses a dirty git branch
function parseGitDirty() {
	[[ $(git status 2> /dev/null | tail -n1) != "nothing to commit, working tree clean" ]] && echo "*"
}
